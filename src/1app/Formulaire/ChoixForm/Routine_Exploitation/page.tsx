'use client';

import { useRouter } from "next/navigation";
import { parseCookies } from "nookies";
import {  useState } from "react";

export default function Home () {
 
  // Ã  propos l'attribut PB j'ai pas encore compris comment il fonctionne //
  
  const [organisationType, setOrganisationType] = useState<string | undefined >("");
  const [pointVuEnergitique,setPointVuEnergitique]=useState<string | undefined >("");
  const [contrainteActuelle ,setContrainteActuelle]=useState<string | undefined >("");
  const [pointPositifs ,setPointPositifs]=useState<string | undefined >("");

   const router=useRouter();

            const handleSubmit =async (event:any)=> {
                event.preventDefault();
                const cookies = parseCookies();
                const id=cookies.id

                const RoutineExploitationData = {
                    Organisation_Type:organisationType,
                    Point_vu_energitique:pointVuEnergitique,
                    Contrainte_Actuelle:contrainteActuelle,
                    Point_Positifs:pointPositifs,
                    Id_Audit:id
                                    
                };
                 
                
const httpLink = 'http://127.0.0.1:1337/api/routine-exploitations?populate=*';

const headerss = {
    'Accept': 'application/json',
    'Content-Type': 'application/json',
    'Authorization': `Bearer ${cookies.jwt}`,
  };

  const body = JSON.stringify({ data: RoutineExploitationData });


  try {
    const response = await fetch(httpLink, {
      method: 'POST',
      headers: headerss,
      body: body,
  });
  
  const responseData = await response.json();
  router.push("/Formulaire/ChoixForm")
  console.log(responseData); 
} catch (error) {
    console.error(error);
}
   


            }

       
    return (
        <div>
         
         <h1>Formulaire routine d'exploitation : </h1>
         <form onSubmit={handleSubmit}>
         
                <p> Organisation type     :  <textarea  onChange={e=>setOrganisationType(e.target.value)} value={organisationType}  />  </p>
                <p> Point vu energitique  :  <textarea  onChange={e=>setPointVuEnergitique(e.target.value)} value={pointVuEnergitique}  />  </p>
                <p> Contrainte actuelle   :  <textarea  onChange={e=>setContrainteActuelle(e.target.value)} value={contrainteActuelle}  />  </p>
                <p> Point positifs        :  <textarea  onChange={e=>setPointPositifs(e.target.value)} value={pointPositifs}  />  </p>
                             

       <p> <button type="submit" >Confirmer</button></p>
         </form>
        </div>
    )
}
